{"version":3,"sources":["components/Business/Business.js","components/BussinessList/BusinessList.js","components/SearchBar/SearchBar.js","Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","href","this","props","business","url","target","src","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","setState","event","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","onSubmit","renderSortByOptions","placeholder","onChange","class","type","Yelp","search","fetch","concat","headers","Authorization","process","then","response","json","jsonResponse","businesses","image_url","address1","zip_code","categories","title","review_count","App","error","API_KEY","components_SearchBar_SearchBar","components_BussinessList_BusinessList","Boolean","window","hostname","match","require","config","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dcd6874.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\n    render(){\r\n       return (\r\n        <div className=\"Business\">\r\n            <div className=\"image-container\">\r\n                <a href={this.props.business.url} target='blank'><img src={this.props.business.imageSrc} alt=''/></a>\r\n            </div>\r\n            <h2>{this.props.business.name}</h2>\r\n            <div className=\"Business-information\">\r\n            <div className=\"Business-address\">\r\n                <p>{this.props.business.address}</p>\r\n                <p>{this.props.business.city}</p>\r\n                <p>{this.props.business.zipCode}</p>\r\n            </div>\r\n            <div className=\"Business-reviews\">\r\n                <h3>{this.props.business.category}</h3>\r\n                <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                <p>{this.props.business.reviewCount} reviews</p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n       ) \r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport \"./BusinessList.css\";\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component{\r\n    render(){\r\n\r\n        if(this.props.business){\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {this.props.business.map(business => {\r\n                   return <Business business={business} key={business.id}/> \r\n                })}\r\n            </div>\r\n        )\r\n            }\r\n            return <h1>Try typing in a different result!</h1>\r\n    }\r\n}\r\n\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match'\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    \r\n\r\n    this.sortByOptions = {\r\n      'Best Match': 'best_match',\r\n      'Highest Rated': 'rating',\r\n      'Most Reviewed': 'review_count'\r\n    };\r\n  }\r\n\r\n  getSortByClass(sortByOption) {\r\n    if (this.state.sortBy === sortByOption) {\r\n      return 'active';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({sortBy: sortByOption});\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({term: event.target.value});\r\n  }\r\n\r\n  handleLocationChange(event) {\r\n    this.setState({location: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return (<li className={this.getSortByClass(sortByOptionValue)}\r\n                  key={sortByOptionValue}\r\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n                {sortByOption}\r\n             </li>);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n      <form className=\"SearchBar\" onSubmit={this.handleSearch}>\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n        </div>\r\n        <div className=\"SearchBar-submit\">\r\n          <button class='submit-button' href='#' type='submit' onClick={this.handleSearch}>Let's Go</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","\r\nconst apiKey = process.env.REACT_APP_API_KEY; // Insert API key here.\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n\r\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`\r\n        }\r\n      }).then(response => {\r\n        return response.json();\r\n      }).then\r\n      (jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n        \r\n          return jsonResponse.businesses.map(business => ({\r\n            id: business.id,\r\n            url: business.url,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            address: business.location.address1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories[0].title,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count\r\n          }));\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","\nimport React from 'react';\nimport './App.css';\nimport BusinessList from './components/BussinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './Yelp';\n\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses: [],\n      error: 'Input where the business is located'\n    }\n  }\n\n  searchYelp = (term, location, sortBy)=>{\n    \n    Yelp.search(term,location,sortBy).then(businesses=>{\n      this.setState({\n        businesses\n      })\n    })\n  }\n\n\n  render() {\n    \n\n    return (\n      <div className=\"App\">\n  <h1>Yelp</h1>\n  <h2>{process.env.API_KEY}</h2>\n  <SearchBar searchYelp={this.searchYelp}/>\n  <BusinessList business={this.state.businesses}/>\n</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}