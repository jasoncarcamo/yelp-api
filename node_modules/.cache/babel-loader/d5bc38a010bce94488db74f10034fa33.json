{"ast":null,"code":"const apiKey = process.env.REACT_APP_API_KEY; // Insert API key here.\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=\".concat(term, \"&location=\").concat(location, \"&sort_by=\").concat(sortBy), {\n      headers: {\n        Authorization: \"Bearer \".concat(apiKey)\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        console.log(jsonResponse);\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          url: business.url,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      }\n    });\n  }\n};\nexport default Yelp;","map":{"version":3,"names":["apiKey","process","env","REACT_APP_API_KEY","Yelp","search","term","location","sortBy","fetch","concat","headers","Authorization","then","response","json","jsonResponse","businesses","console","log","map","business","id","url","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count"],"sources":["/Users/jason/Documents/GitHub/yelp-api/src/Yelp.js"],"sourcesContent":["\nconst apiKey = process.env.REACT_APP_API_KEY; // Insert API key here.\n\nconst Yelp = {\n  search(term, location, sortBy) {\n\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }).then(response => {\n        return response.json();\n      }).then\n      (jsonResponse => {\n        if (jsonResponse.businesses) {\n          console.log(jsonResponse)\n          return jsonResponse.businesses.map(business => ({\n            id: business.id,\n            url: business.url,\n            imageSrc: business.image_url,\n            name: business.name,\n            address: business.location.address1,\n            city: business.location.city,\n            state: business.location.state,\n            zipCode: business.location.zip_code,\n            category: business.categories[0].title,\n            rating: business.rating,\n            reviewCount: business.review_count\n          }));\n        }\n      });\n  }\n};\n\nexport default Yelp;\n"],"mappings":"AACA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAAC;;AAE9C,MAAMC,IAAI,GAAG;EACXC,MAAMA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAE3B,OAAOC,KAAK,uFAAAC,MAAA,CAAuFJ,IAAI,gBAAAI,MAAA,CAAaH,QAAQ,eAAAG,MAAA,CAAYF,MAAM,GAAI;MAChJG,OAAO,EAAE;QACPC,aAAa,YAAAF,MAAA,CAAYV,MAAM;MACjC;IACF,CAAC,CAAC,CAACa,IAAI,CAACC,QAAQ,IAAI;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CAACF,IAAI,CACNG,YAAY,IAAI;MACf,IAAIA,YAAY,CAACC,UAAU,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;QACzB,OAAOA,YAAY,CAACC,UAAU,CAACG,GAAG,CAACC,QAAQ,KAAK;UAC9CC,EAAE,EAAED,QAAQ,CAACC,EAAE;UACfC,GAAG,EAAEF,QAAQ,CAACE,GAAG;UACjBC,QAAQ,EAAEH,QAAQ,CAACI,SAAS;UAC5BC,IAAI,EAAEL,QAAQ,CAACK,IAAI;UACnBC,OAAO,EAAEN,QAAQ,CAACd,QAAQ,CAACqB,QAAQ;UACnCC,IAAI,EAAER,QAAQ,CAACd,QAAQ,CAACsB,IAAI;UAC5BC,KAAK,EAAET,QAAQ,CAACd,QAAQ,CAACuB,KAAK;UAC9BC,OAAO,EAAEV,QAAQ,CAACd,QAAQ,CAACyB,QAAQ;UACnCC,QAAQ,EAAEZ,QAAQ,CAACa,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;UACtCC,MAAM,EAAEf,QAAQ,CAACe,MAAM;UACvBC,WAAW,EAAEhB,QAAQ,CAACiB;QACxB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC;EACN;AACF,CAAC;AAED,eAAelC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}